{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### <center> xo-integrations\n",
    "### s\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "######### REDIS\n",
    "\n",
    "\n",
    "# import redis\n",
    "# r = redis.Redis(host='0.0.0.0', port=6379, db=0)\n",
    "# pubsub = r.pubsub()\n",
    "\n",
    "# r.set('foo/a/b/c', 'bar')\n",
    "# print(r.get('foo/a/b/c'))\n",
    "# r.get\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# from xo import *\n",
    "\n",
    "# xo.a.b.c = lambda *a,**kw: print(a,kw)\n",
    "# xo.a.b.c(1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "\n",
    "from xo import *\n",
    "import redis\n",
    "r = redis.Redis(host='0.0.0.0', port=6379, db=0)\n",
    "pubsub = r.pubsub()\n",
    "\n",
    "\n",
    "def redisSet(self,name,value=None, *args, **kwargs):\n",
    "    \n",
    "    print(\"YYYYYYYYYYYYEEEEEEEEESSSSSSSSSSSet\",self._id,name,value, args, kwargs)\n",
    "    # self[name] # double set to update (created,update)\n",
    "\n",
    "    # if len (args) == 0 or value is None or name is None:\n",
    "    if value is None or name is None:\n",
    "        print(\"00000000000000\", self._id, name, value, args, kwargs)\n",
    "    elif len(args) == 0:\n",
    "        print(\"111111111111111111110\", self._id, name, value, args, kwargs)\n",
    "        # res = self.__setattr__(*args, **kwargs)\n",
    "        kwargs[\"_skip_overload\"] = True\n",
    "        print(type(self),self)\n",
    "        self[name]._setValue(value)\n",
    "        self.__setattr__(name, value, *args, **kwargs)\n",
    "        res = r.set(self._id+\"/\"+name, value)\n",
    "        print(\"vvvvvvvvvvvv2\",type(value),value)\n",
    "        r.publish(self._id+\"/\"+name, value)\n",
    "        print(\"RES\", res)\n",
    "        # self.value = value\n",
    "        print(\"ttt\", name, value, self)\n",
    "        # self[name]._setValue(value)\n",
    "        # return res\n",
    "        # # print(\" ::: REDIS GET:\", self._id, args, kwargs)\n",
    "        # res = r.get(self._id)\n",
    "        # self[args[0]]._setValue(res)\n",
    "        # # print(\" ::: REDIS RESULTS:\", res)\n",
    "        # print(f\" ::: REDIS GET RESULTS: ({self._id})\", res, self, \"GGGGGGGG\")\n",
    "        return value\n",
    "    else:\n",
    "        print(\" ::: REDIS SET !\",self._id, args, kwargs)\n",
    "        res = r.set(self._id+\"/\"+name, value)\n",
    "        r.publish(self._id+\"/\"+name, value)\n",
    "        # self[args[0]].value = res\n",
    "        # print(\" ::: REDIS RESULTS:\", res)\n",
    "        self[name]._setValue(value)\n",
    "        print(f\" ::: REDIS SET RESULTS: ({self._id+'/'+name})\", res, self, \"LLLLLLL\")\n",
    "        # self.__setattr__(self,args[0], res, _skip_overload=True)# *args, **kwargs)\n",
    "        # *args, **kwargs)\n",
    "        self.__setattr__(name, value, _skip_overload=True)  # *args, **kwargs)\n",
    "        return value\n",
    "\n",
    "def redisCall(self, *args, **kwargs):\n",
    "    # print(\"YYYYYYYYYYYYEEEEEEEEESSSSSSSSSSSCCC\",self._id, args, kwargs)\n",
    "    kwargs[\"_skip_overload\"] = True\n",
    "    if len (args) == 0:\n",
    "        print(\" ::: REDIS GET CALL:\", self._id, args, kwargs)\n",
    "        res = r.get(self._id)\n",
    "        self._setValue(res)\n",
    "        self.value = res\n",
    "        # print(\" ::: REDIS RESULTS:\", res)\n",
    "        print(f\" ::: REDIS GET RESULTS: ({self._id})\", res, self, \"CCCCCCCCCCC\")\n",
    "        return res\n",
    "    else:\n",
    "        print(\" ::: REDIS SET CALL!\",self._id, args, kwargs)\n",
    "        res = r.set(self._id, args[0])\n",
    "        # print(\"vvvvvvvvvvvv\", type(value), value)\n",
    "        print(args[0],type(args[0]))\n",
    "        r.publish(self._id, args[0])\n",
    "        print(\" ::: REDIS RESULTS:\", res)\n",
    "        self._setValue(args[0])\n",
    "        print(f\" ::: REDIS SET RESULTS: ({self._id})\", res, self, \"MMMMMMMMMMM\")\n",
    "        return self\n",
    "\n",
    "\n",
    "    # self.__call__(self, *args, **kwargs)\n",
    "    # if \"org\" in kwargs:\n",
    "    #     return kwargs[\"org\"](self, overload=False, *args, **kwargs)\n",
    "\n",
    "\n",
    "# xo.a.b.foo = lambda*a,**kw: print(\"ooooooo\",a,kw)\n",
    "# xo.a.b.foo(\"Hello\")\n",
    "\n",
    "\n",
    "xo.redis._behaviors = {Expando.__call__: redisCall}\n",
    "xo.redis._behaviors[Expando.__setattr__] = redisSet\n",
    "# xo.redis._behaviors[Expando.__getattr__] = redisCall\n",
    "# xo.redis._behaviors[Expando.__repr__] = redisGetSet\n",
    "# xo.redis._behaviors[Expando.__str__] = redisGetSet\n",
    "# print(\"\")\n",
    "# print(xo.redis._behaviors)\n",
    "# print(\"\")\n",
    "# print(\"_________________________________\")\n",
    "print(\"_________________________________\")\n",
    "print(\"change fooooooo:  \")\n",
    "xo.redis.a.b.c(\"FOOOOOOOOOOOO\")\n",
    "xo.redis.a.b.c(\"FOOOOOOOOOOOOX\")\n",
    "xo.redis.a.b.c(\"LUCKY\")\n",
    "xo.redis.a.b.c(\"LUCKYER\")\n",
    "\n",
    "print(\"!!!!!!!! get foo ?\", xo.redis.a.b.c())\n",
    "print(\"_________________________________\")\n",
    "xo.redis.a.b.c.d.e = 333\n",
    "xo.redis.a.b.c.d.e = 444\n",
    "xo.redis.a = \"super easy to...\"\n",
    "xo.redis.b = \"save to redis!\"\n",
    "xo.redis.a.b.c.d.e.f.g = \"AMAZING *this is saved to redis via xo********\"\n",
    "print(\"!!!!!!!! get Amazing ? \"+str(xo.redis.a.b.c.d.e.f.g()))\n",
    "print()\n",
    "print(\"_________________\")\n",
    "print(\"▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲\")\n",
    "# print(dict(xo.redis))\n",
    "xo.redis\n",
    "# print(dict(xo.redis))\n",
    "print(xo.redis.a.b.c())\n",
    "print(xo.redis.a.b.c.value)\n",
    "print(xo.redis.a.b.c)\n",
    "print(xo.redis.a.b.c.d.e.value)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "def overloadX(self, org=None,*args, **kwargs):\n",
    "    print(\"Nice !\", self, org, args, kwargs)\n",
    "    # If you want to run the original function, you can do this:\n",
    "    return org(self, overload=False, *args, **kwargs)\n",
    "\n",
    "def foo(self, overload=True, *args, **kwargs):\n",
    "    if overload: return _behaviors[foo](self,org=foo,*args,**kwargs) if foo in _behaviors else foo(self,overload=False,*args,**kwargs);\n",
    "    # If not overloaded, do what was intended\n",
    "    return 2\n",
    "\n",
    "_behaviors = { foo: overloadX }\n",
    "\n",
    "foo(\"@@@@@@\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "from xo import *\n",
    "a = lambda x: x@xo\n",
    "\n",
    "# xo.zmq@\"namespace\"                                                                              # type: ignore\n",
    "xo.zmq@\"recording_app\"                                                                          # type: ignore\n",
    "xo.zmq.nice.awesome = \"please breath\"                                                                          # type: ignore\n",
    "\n",
    "\n",
    "xo.use = lambda x: x@xo\n",
    "xo.use(\"yoo\")\n",
    "\n",
    "print(xo)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "xo.redis.a.b.c = \"YEAAAAAAAAAA BOYYYYYYYY\"\n",
    "print(\"......!!!!!\", r.get(\"xo/redis/a/b/c\"))\n",
    "print(\"......!!!!!\", xo.redis.a.b.c)\n",
    "xo.redis.a.b.c = \"YEAAAAAAAAAA BOYYYYYYYY2\"\n",
    "print(\"......!!!!!\", r.get(\"xo/redis/a/b/c\"))\n",
    "print(\"......!!!!!\", xo.redis.a.b.c.value)\n",
    "\n",
    "# xo.redis.a.b.c(\"calllllll\")\n",
    "print(\"......\")\n",
    "print()\n",
    "print()\n",
    "print()\n",
    "print()\n",
    "# print(\"DONE!\", str(xo.redis.a.b.c()))\n",
    "print(\"DONE!\", str(xo.redis))\n",
    "print()\n",
    "print(\":::\",)\n",
    "print(\":::\",xo.redis.a.b.c)\n",
    "print(\":::\",xo.redis.a.b.c())\n",
    "xo.redis.a.b.c(\"GGGGGGGGGGGG\")\n",
    "print(\":::\",)\n",
    "print(\":::\",xo.redis.a.b.c)\n",
    "print(\":::\",xo.redis.a.b.c())\n",
    "xo.redis.a.b.c = \"FFFFFFFFFFFF\"\n",
    "print(\":::\",)\n",
    "print(\":::\",xo.redis.a.b.c.value)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "\n",
    "\n",
    "def custom_handler(msg, *args, **kwargs):\n",
    "    if isinstance(msg, dict) and \"type\" in msg:\n",
    "        if \"message\" in msg[\"type\"]:         \n",
    "            # do_something with the message\n",
    "            channel = msg[\"channel\"].decode().replace(\n",
    "                \"/\", \".\").strip(\"xo.\")#.split(\".\")[-1]\n",
    "            print(\"@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\", msg, args, kwargs)\n",
    "            # return message\n",
    "            print(\"@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\")\n",
    "            print(\"@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\", str(msg[\"channel\"]).replace(\"/\", \".\"))\n",
    "            print(\"@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\",\n",
    "                  msg[\"channel\"].decode().replace(\"/\", \".\"))\n",
    "            print(\"@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\", msg[\"data\"])\n",
    "            f = xo._GetXO(channel, allow_creation=True)\n",
    "            # f = xo[msg[\"channel\"].decode().strip(\"xo/\").replace(\"/\", \".\")]\n",
    "            # f[channel] = msg[\"data\"]\n",
    "            print(\"######  \", f)\n",
    "            f._setValue(msg[\"data\"])\n",
    "            print(\"######  \", f.value)\n",
    "            print(\"######  \", dict(f))\n",
    "            print(dict(f))\n",
    "            print(\"A@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\",f)\n",
    "            print()\n",
    "        if msg[\"type\"] == \"subscribe\":\n",
    "            print(\"SUBSCRIBED TO CHANNEL\", msg[\"pattern\"])\n",
    "        print(\">>>>>>>>>>>>>>>\")\n",
    "        print(dict(xo.redis))\n",
    "        print(\"<<<<<<<<<<<<<<<\")\n",
    "\n",
    "def subscribe(key='*', handler=lambda msg: print('XXXXXXXXXXXXHandler', msg), *args, **kwargs):\n",
    "    print(\"UUUUUUUUUUUUUUUUUUUUUUUU\", key, handler, args, kwargs)\n",
    "    print(\"UUUUUUUUUUUUUUUUUUUUUUUU\")\n",
    "    print(\"UUUUUUUUUUUUUUUUUUUUUUUU\")\n",
    "    print(\"UUUUUUUUUUUUUUUUUUUUUUUU\")\n",
    "    pubsub.psubscribe(**{\"xo/redis*\": handler})\n",
    "    # pubsub.psubscribe(key = key, handler = handler)\n",
    "    # pubsub.subscribe(subscribe_key)\n",
    "    # pubsub.subscribe(key)\n",
    "    # pubsub.subscribe(**{key: event_handler if handler is None else handler})\n",
    "    print(\"........00000\")\n",
    "    pubsub.run_in_thread(sleep_time=.00001, daemon=True)\n",
    "    # for item in pubsub.listen():\n",
    "    #     print(item, type(item))\n",
    "    #     if item['type'] == 'message':\n",
    "    #         print(item['data'])\n",
    "    print(\"DONE\")\n",
    "\n",
    "import time \n",
    "\n",
    "print(\"ooooooooooooo\")\n",
    "# subscribe(key='xo/redis/a/b/c', handler=lambda msg: print('Handler', msg))\n",
    "subscribe(handler=custom_handler)\n",
    "# subscribe(\"xo/redis/a/b/c\", handler=lambda msg: print(\n",
    "#     \" ::: AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABCCCCC CHANGED TO\", msg))\n",
    "print(\"DONE!\", str(xo.redis.a.b.c.value))\n",
    "# for new_message in pubsub.listen():\n",
    "#     custom_handler(new_message)\n",
    "#     print(\"222\")\n",
    "xo.redis.x.y.z(\"ZZZZZZZZ1\")\n",
    "xo.redis.x.y.z = \"ZZZZZZZZ2\"\n",
    "print(xo.redis.x.y.z.value)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ {'type': 'pmessage', 'pattern': b'xo/redis*', 'channel': b'xo/redis/a', 'data': b'0'} () {}\n",
      "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n",
      "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ b'xo.redis.a'\n",
      "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ xo.redis.a\n",
      "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ b'0'\n",
      "FFFFFFFFFFFFFFF\n",
      "FFFFFFFFFFFFFFF\n",
      "FFFFFFFFFFFFFFF xo\n",
      "{'redis': {'a': {'b': {'c': {'value': 'FFFFFFFFFFFF', 'd': {'e': {'value': 444, 'f': {'g': b'AMAZING *this is saved to redis via xo********'}}}}}, 'value': b'99'}, 'b': 'save to redis!', 'x': {'y': {'z': b'ZZZZZZZZ2'}}}, 'zmq': {'nice': {'awesome': 'please breath'}}, 'use': <function <lambda> at 0x7f6e3f4a3e50>, 'value': 'yoo'} xo\n",
      "tttccccchild, final redis xo\n",
      "tttccccchild, final a xo/redis\n",
      "FFFFFFFFFFFFFFF\n",
      "FFFFFFFFFFFFFFF\n",
      "FFFFFFFFFFFFFFF\n",
      "######   {'b': {'c': {'value': 'FFFFFFFFFFFF', 'd': {'e': {'value': 444, 'f': {'g': b'AMAZING *this is saved to redis via xo********'}}}}}, 'value': b'99'}\n",
      "xo/redis/a  SETTING VALUE TO b'0'\n",
      "{'b': {'c': {'value': 'FFFFFFFFFFFF', 'd': {'e': {'value': 444, 'f': {'g': b'AMAZING *this is saved to redis via xo********'}}}}}, 'value': b'0'}\n",
      "######   b'0'\n",
      "######   {'b': {'c': {'value': 'FFFFFFFFFFFF', 'd': {'e': {'value': 444, 'f': {'g': b'AMAZING *this is saved to redis via xo********'}}}}}, 'value': b'0'}\n",
      "{'b': {'c': {'value': 'FFFFFFFFFFFF', 'd': {'e': {'value': 444, 'f': {'g': b'AMAZING *this is saved to redis via xo********'}}}}}, 'value': b'0'}\n",
      "A@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ {'b': {'c': {'value': 'FFFFFFFFFFFF', 'd': {'e': {'value': 444, 'f': {'g': b'AMAZING *this is saved to redis via xo********'}}}}}, 'value': b'0'}\n",
      "\n",
      ">>>>>>>>>>>>>>>\n",
      "{'a': {'b': {'c': {'value': 'FFFFFFFFFFFF', 'd': {'e': {'value': 444, 'f': {'g': b'AMAZING *this is saved to redis via xo********'}}}}}, 'value': b'0'}, 'b': 'save to redis!', 'x': {'y': {'z': b'ZZZZZZZZ2'}}}\n",
      "<<<<<<<<<<<<<<<\n",
      "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ {'type': 'pmessage', 'pattern': b'xo/redis*', 'channel': b'xo/redis/a', 'data': b'1'} () {}\n",
      "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n",
      "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ b'xo.redis.a'\n",
      "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ xo.redis.a\n",
      "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ b'1'\n",
      "FFFFFFFFFFFFFFF\n",
      "FFFFFFFFFFFFFFF\n",
      "FFFFFFFFFFFFFFF xo\n",
      "{'redis': {'a': {'b': {'c': {'value': 'FFFFFFFFFFFF', 'd': {'e': {'value': 444, 'f': {'g': b'AMAZING *this is saved to redis via xo********'}}}}}, 'value': b'0'}, 'b': 'save to redis!', 'x': {'y': {'z': b'ZZZZZZZZ2'}}}, 'zmq': {'nice': {'awesome': 'please breath'}}, 'use': <function <lambda> at 0x7f6e3f4a3e50>, 'value': 'yoo'} xo\n",
      "tttccccchild, final redis xo\n",
      "tttccccchild, final a xo/redis\n",
      "FFFFFFFFFFFFFFF\n",
      "FFFFFFFFFFFFFFF\n",
      "FFFFFFFFFFFFFFF\n",
      "######   {'b': {'c': {'value': 'FFFFFFFFFFFF', 'd': {'e': {'value': 444, 'f': {'g': b'AMAZING *this is saved to redis via xo********'}}}}}, 'value': b'0'}\n",
      "xo/redis/a  SETTING VALUE TO b'1'\n",
      "{'b': {'c': {'value': 'FFFFFFFFFFFF', 'd': {'e': {'value': 444, 'f': {'g': b'AMAZING *this is saved to redis via xo********'}}}}}, 'value': b'1'}\n",
      "######   b'1'\n",
      "######   {'b': {'c': {'value': 'FFFFFFFFFFFF', 'd': {'e': {'value': 444, 'f': {'g': b'AMAZING *this is saved to redis via xo********'}}}}}, 'value': b'1'}\n",
      "{'b': {'c': {'value': 'FFFFFFFFFFFF', 'd': {'e': {'value': 444, 'f': {'g': b'AMAZING *this is saved to redis via xo********'}}}}}, 'value': b'1'}\n",
      "A@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ {'b': {'c': {'value': 'FFFFFFFFFFFF', 'd': {'e': {'value': 444, 'f': {'g': b'AMAZING *this is saved to redis via xo********'}}}}}, 'value': b'1'}\n",
      "\n",
      ">>>>>>>>>>>>>>>\n",
      "{'a': {'b': {'c': {'value': 'FFFFFFFFFFFF', 'd': {'e': {'value': 444, 'f': {'g': b'AMAZING *this is saved to redis via xo********'}}}}}, 'value': b'1'}, 'b': 'save to redis!', 'x': {'y': {'z': b'ZZZZZZZZ2'}}}\n",
      "<<<<<<<<<<<<<<<\n",
      "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ {'type': 'pmessage', 'pattern': b'xo/redis*', 'channel': b'xo/redis/a', 'data': b'2'} () {}\n",
      "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n",
      "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ b'xo.redis.a'\n",
      "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ xo.redis.a\n",
      "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ b'2'\n",
      "FFFFFFFFFFFFFFF\n",
      "FFFFFFFFFFFFFFF\n",
      "FFFFFFFFFFFFFFF xo\n",
      "{'redis': {'a': {'b': {'c': {'value': 'FFFFFFFFFFFF', 'd': {'e': {'value': 444, 'f': {'g': b'AMAZING *this is saved to redis via xo********'}}}}}, 'value': b'1'}, 'b': 'save to redis!', 'x': {'y': {'z': b'ZZZZZZZZ2'}}}, 'zmq': {'nice': {'awesome': 'please breath'}}, 'use': <function <lambda> at 0x7f6e3f4a3e50>, 'value': 'yoo'} xo\n",
      "tttccccchild, final redis xo\n",
      "tttccccchild, final a xo/redis\n",
      "FFFFFFFFFFFFFFF\n",
      "FFFFFFFFFFFFFFF\n",
      "FFFFFFFFFFFFFFF\n",
      "######   {'b': {'c': {'value': 'FFFFFFFFFFFF', 'd': {'e': {'value': 444, 'f': {'g': b'AMAZING *this is saved to redis via xo********'}}}}}, 'value': b'1'}\n",
      "xo/redis/a  SETTING VALUE TO b'2'\n",
      "{'b': {'c': {'value': 'FFFFFFFFFFFF', 'd': {'e': {'value': 444, 'f': {'g': b'AMAZING *this is saved to redis via xo********'}}}}}, 'value': b'2'}\n",
      "######   b'2'\n",
      "######   {'b': {'c': {'value': 'FFFFFFFFFFFF', 'd': {'e': {'value': 444, 'f': {'g': b'AMAZING *this is saved to redis via xo********'}}}}}, 'value': b'2'}\n",
      "{'b': {'c': {'value': 'FFFFFFFFFFFF', 'd': {'e': {'value': 444, 'f': {'g': b'AMAZING *this is saved to redis via xo********'}}}}}, 'value': b'2'}\n",
      "A@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ {'b': {'c': {'value': 'FFFFFFFFFFFF', 'd': {'e': {'value': 444, 'f': {'g': b'AMAZING *this is saved to redis via xo********'}}}}}, 'value': b'2'}\n",
      "\n",
      ">>>>>>>>>>>>>>>\n",
      "{'a': {'b': {'c': {'value': 'FFFFFFFFFFFF', 'd': {'e': {'value': 444, 'f': {'g': b'AMAZING *this is saved to redis via xo********'}}}}}, 'value': b'2'}, 'b': 'save to redis!', 'x': {'y': {'z': b'ZZZZZZZZ2'}}}\n",
      "<<<<<<<<<<<<<<<\n",
      "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ {'type': 'pmessage', 'pattern': b'xo/redis*', 'channel': b'xo/redis/a', 'data': b'3'} () {}\n",
      "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n",
      "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ b'xo.redis.a'\n",
      "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ xo.redis.a\n",
      "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ b'3'\n",
      "FFFFFFFFFFFFFFF\n",
      "FFFFFFFFFFFFFFF\n",
      "FFFFFFFFFFFFFFF xo\n",
      "{'redis': {'a': {'b': {'c': {'value': 'FFFFFFFFFFFF', 'd': {'e': {'value': 444, 'f': {'g': b'AMAZING *this is saved to redis via xo********'}}}}}, 'value': b'2'}, 'b': 'save to redis!', 'x': {'y': {'z': b'ZZZZZZZZ2'}}}, 'zmq': {'nice': {'awesome': 'please breath'}}, 'use': <function <lambda> at 0x7f6e3f4a3e50>, 'value': 'yoo'} xo\n",
      "tttccccchild, final redis xo\n",
      "tttccccchild, final a xo/redis\n",
      "FFFFFFFFFFFFFFF\n",
      "FFFFFFFFFFFFFFF\n",
      "FFFFFFFFFFFFFFF\n",
      "######   {'b': {'c': {'value': 'FFFFFFFFFFFF', 'd': {'e': {'value': 444, 'f': {'g': b'AMAZING *this is saved to redis via xo********'}}}}}, 'value': b'2'}\n",
      "xo/redis/a  SETTING VALUE TO b'3'\n",
      "{'b': {'c': {'value': 'FFFFFFFFFFFF', 'd': {'e': {'value': 444, 'f': {'g': b'AMAZING *this is saved to redis via xo********'}}}}}, 'value': b'3'}\n",
      "######   b'3'\n",
      "######   {'b': {'c': {'value': 'FFFFFFFFFFFF', 'd': {'e': {'value': 444, 'f': {'g': b'AMAZING *this is saved to redis via xo********'}}}}}, 'value': b'3'}\n",
      "{'b': {'c': {'value': 'FFFFFFFFFFFF', 'd': {'e': {'value': 444, 'f': {'g': b'AMAZING *this is saved to redis via xo********'}}}}}, 'value': b'3'}\n",
      "A@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ {'b': {'c': {'value': 'FFFFFFFFFFFF', 'd': {'e': {'value': 444, 'f': {'g': b'AMAZING *this is saved to redis via xo********'}}}}}, 'value': b'3'}\n",
      "\n",
      ">>>>>>>>>>>>>>>\n",
      "{'a': {'b': {'c': {'value': 'FFFFFFFFFFFF', 'd': {'e': {'value': 444, 'f': {'g': b'AMAZING *this is saved to redis via xo********'}}}}}, 'value': b'3'}, 'b': 'save to redis!', 'x': {'y': {'z': b'ZZZZZZZZ2'}}}\n",
      "<<<<<<<<<<<<<<<\n",
      "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ {'type': 'pmessage', 'pattern': b'xo/redis*', 'channel': b'xo/redis/a', 'data': b'4'} () {}\n",
      "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n",
      "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ b'xo.redis.a'\n",
      "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ xo.redis.a\n",
      "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ b'4'\n",
      "FFFFFFFFFFFFFFF\n",
      "FFFFFFFFFFFFFFF\n",
      "FFFFFFFFFFFFFFF xo\n",
      "{'redis': {'a': {'b': {'c': {'value': 'FFFFFFFFFFFF', 'd': {'e': {'value': 444, 'f': {'g': b'AMAZING *this is saved to redis via xo********'}}}}}, 'value': b'3'}, 'b': 'save to redis!', 'x': {'y': {'z': b'ZZZZZZZZ2'}}}, 'zmq': {'nice': {'awesome': 'please breath'}}, 'use': <function <lambda> at 0x7f6e3f4a3e50>, 'value': 'yoo'} xo\n",
      "tttccccchild, final redis xo\n",
      "tttccccchild, final a xo/redis\n",
      "FFFFFFFFFFFFFFF\n",
      "FFFFFFFFFFFFFFF\n",
      "FFFFFFFFFFFFFFF\n",
      "######   {'b': {'c': {'value': 'FFFFFFFFFFFF', 'd': {'e': {'value': 444, 'f': {'g': b'AMAZING *this is saved to redis via xo********'}}}}}, 'value': b'3'}\n",
      "xo/redis/a  SETTING VALUE TO b'4'\n",
      "{'b': {'c': {'value': 'FFFFFFFFFFFF', 'd': {'e': {'value': 444, 'f': {'g': b'AMAZING *this is saved to redis via xo********'}}}}}, 'value': b'4'}\n",
      "######   b'4'\n",
      "######   {'b': {'c': {'value': 'FFFFFFFFFFFF', 'd': {'e': {'value': 444, 'f': {'g': b'AMAZING *this is saved to redis via xo********'}}}}}, 'value': b'4'}\n",
      "{'b': {'c': {'value': 'FFFFFFFFFFFF', 'd': {'e': {'value': 444, 'f': {'g': b'AMAZING *this is saved to redis via xo********'}}}}}, 'value': b'4'}\n",
      "A@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ {'b': {'c': {'value': 'FFFFFFFFFFFF', 'd': {'e': {'value': 444, 'f': {'g': b'AMAZING *this is saved to redis via xo********'}}}}}, 'value': b'4'}\n",
      "\n",
      ">>>>>>>>>>>>>>>\n",
      "{'a': {'b': {'c': {'value': 'FFFFFFFFFFFF', 'd': {'e': {'value': 444, 'f': {'g': b'AMAZING *this is saved to redis via xo********'}}}}}, 'value': b'4'}, 'b': 'save to redis!', 'x': {'y': {'z': b'ZZZZZZZZ2'}}}\n",
      "<<<<<<<<<<<<<<<\n",
      "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ {'type': 'pmessage', 'pattern': b'xo/redis*', 'channel': b'xo/redis/a', 'data': b'5'} () {}\n",
      "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n",
      "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ b'xo.redis.a'\n",
      "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ xo.redis.a\n",
      "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ b'5'\n",
      "FFFFFFFFFFFFFFF\n",
      "FFFFFFFFFFFFFFF\n",
      "FFFFFFFFFFFFFFF xo\n",
      "{'redis': {'a': {'b': {'c': {'value': 'FFFFFFFFFFFF', 'd': {'e': {'value': 444, 'f': {'g': b'AMAZING *this is saved to redis via xo********'}}}}}, 'value': b'4'}, 'b': 'save to redis!', 'x': {'y': {'z': b'ZZZZZZZZ2'}}}, 'zmq': {'nice': {'awesome': 'please breath'}}, 'use': <function <lambda> at 0x7f6e3f4a3e50>, 'value': 'yoo'} xo\n",
      "tttccccchild, final redis xo\n",
      "tttccccchild, final a xo/redis\n",
      "FFFFFFFFFFFFFFF\n",
      "FFFFFFFFFFFFFFF\n",
      "FFFFFFFFFFFFFFF\n",
      "######   {'b': {'c': {'value': 'FFFFFFFFFFFF', 'd': {'e': {'value': 444, 'f': {'g': b'AMAZING *this is saved to redis via xo********'}}}}}, 'value': b'4'}\n",
      "xo/redis/a  SETTING VALUE TO b'5'\n",
      "{'b': {'c': {'value': 'FFFFFFFFFFFF', 'd': {'e': {'value': 444, 'f': {'g': b'AMAZING *this is saved to redis via xo********'}}}}}, 'value': b'5'}\n",
      "######   b'5'\n",
      "######   {'b': {'c': {'value': 'FFFFFFFFFFFF', 'd': {'e': {'value': 444, 'f': {'g': b'AMAZING *this is saved to redis via xo********'}}}}}, 'value': b'5'}\n",
      "{'b': {'c': {'value': 'FFFFFFFFFFFF', 'd': {'e': {'value': 444, 'f': {'g': b'AMAZING *this is saved to redis via xo********'}}}}}, 'value': b'5'}\n",
      "A@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ {'b': {'c': {'value': 'FFFFFFFFFFFF', 'd': {'e': {'value': 444, 'f': {'g': b'AMAZING *this is saved to redis via xo********'}}}}}, 'value': b'5'}\n",
      "\n",
      ">>>>>>>>>>>>>>>\n",
      "{'a': {'b': {'c': {'value': 'FFFFFFFFFFFF', 'd': {'e': {'value': 444, 'f': {'g': b'AMAZING *this is saved to redis via xo********'}}}}}, 'value': b'5'}, 'b': 'save to redis!', 'x': {'y': {'z': b'ZZZZZZZZ2'}}}\n",
      "<<<<<<<<<<<<<<<\n",
      "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ {'type': 'pmessage', 'pattern': b'xo/redis*', 'channel': b'xo/redis/a', 'data': b'6'} () {}\n",
      "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n",
      "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ b'xo.redis.a'\n",
      "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ xo.redis.a\n",
      "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ b'6'\n",
      "FFFFFFFFFFFFFFF\n",
      "FFFFFFFFFFFFFFF\n",
      "FFFFFFFFFFFFFFF xo\n",
      "{'redis': {'a': {'b': {'c': {'value': 'FFFFFFFFFFFF', 'd': {'e': {'value': 444, 'f': {'g': b'AMAZING *this is saved to redis via xo********'}}}}}, 'value': b'5'}, 'b': 'save to redis!', 'x': {'y': {'z': b'ZZZZZZZZ2'}}}, 'zmq': {'nice': {'awesome': 'please breath'}}, 'use': <function <lambda> at 0x7f6e3f4a3e50>, 'value': 'yoo'} xo\n",
      "tttccccchild, final redis xo\n",
      "tttccccchild, final a xo/redis\n",
      "FFFFFFFFFFFFFFF\n",
      "FFFFFFFFFFFFFFF\n",
      "FFFFFFFFFFFFFFF\n",
      "######   {'b': {'c': {'value': 'FFFFFFFFFFFF', 'd': {'e': {'value': 444, 'f': {'g': b'AMAZING *this is saved to redis via xo********'}}}}}, 'value': b'5'}\n",
      "xo/redis/a  SETTING VALUE TO b'6'\n",
      "{'b': {'c': {'value': 'FFFFFFFFFFFF', 'd': {'e': {'value': 444, 'f': {'g': b'AMAZING *this is saved to redis via xo********'}}}}}, 'value': b'6'}\n",
      "######   b'6'\n",
      "######   {'b': {'c': {'value': 'FFFFFFFFFFFF', 'd': {'e': {'value': 444, 'f': {'g': b'AMAZING *this is saved to redis via xo********'}}}}}, 'value': b'6'}\n",
      "{'b': {'c': {'value': 'FFFFFFFFFFFF', 'd': {'e': {'value': 444, 'f': {'g': b'AMAZING *this is saved to redis via xo********'}}}}}, 'value': b'6'}\n",
      "A@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ {'b': {'c': {'value': 'FFFFFFFFFFFF', 'd': {'e': {'value': 444, 'f': {'g': b'AMAZING *this is saved to redis via xo********'}}}}}, 'value': b'6'}\n",
      "\n",
      ">>>>>>>>>>>>>>>\n",
      "{'a': {'b': {'c': {'value': 'FFFFFFFFFFFF', 'd': {'e': {'value': 444, 'f': {'g': b'AMAZING *this is saved to redis via xo********'}}}}}, 'value': b'6'}, 'b': 'save to redis!', 'x': {'y': {'z': b'ZZZZZZZZ2'}}}\n",
      "<<<<<<<<<<<<<<<\n",
      "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ {'type': 'pmessage', 'pattern': b'xo/redis*', 'channel': b'xo/redis/a', 'data': b'7'} () {}\n",
      "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n",
      "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ b'xo.redis.a'\n",
      "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ xo.redis.a\n",
      "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ b'7'\n",
      "FFFFFFFFFFFFFFF\n",
      "FFFFFFFFFFFFFFF\n",
      "FFFFFFFFFFFFFFF xo\n",
      "{'redis': {'a': {'b': {'c': {'value': 'FFFFFFFFFFFF', 'd': {'e': {'value': 444, 'f': {'g': b'AMAZING *this is saved to redis via xo********'}}}}}, 'value': b'6'}, 'b': 'save to redis!', 'x': {'y': {'z': b'ZZZZZZZZ2'}}}, 'zmq': {'nice': {'awesome': 'please breath'}}, 'use': <function <lambda> at 0x7f6e3f4a3e50>, 'value': 'yoo'} xo\n",
      "tttccccchild, final redis xo\n",
      "tttccccchild, final a xo/redis\n",
      "FFFFFFFFFFFFFFF\n",
      "FFFFFFFFFFFFFFF\n",
      "FFFFFFFFFFFFFFF\n",
      "######   {'b': {'c': {'value': 'FFFFFFFFFFFF', 'd': {'e': {'value': 444, 'f': {'g': b'AMAZING *this is saved to redis via xo********'}}}}}, 'value': b'6'}\n",
      "xo/redis/a  SETTING VALUE TO b'7'\n",
      "{'b': {'c': {'value': 'FFFFFFFFFFFF', 'd': {'e': {'value': 444, 'f': {'g': b'AMAZING *this is saved to redis via xo********'}}}}}, 'value': b'7'}\n",
      "######   b'7'\n",
      "######   {'b': {'c': {'value': 'FFFFFFFFFFFF', 'd': {'e': {'value': 444, 'f': {'g': b'AMAZING *this is saved to redis via xo********'}}}}}, 'value': b'7'}\n",
      "{'b': {'c': {'value': 'FFFFFFFFFFFF', 'd': {'e': {'value': 444, 'f': {'g': b'AMAZING *this is saved to redis via xo********'}}}}}, 'value': b'7'}\n",
      "A@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ {'b': {'c': {'value': 'FFFFFFFFFFFF', 'd': {'e': {'value': 444, 'f': {'g': b'AMAZING *this is saved to redis via xo********'}}}}}, 'value': b'7'}\n",
      "\n",
      ">>>>>>>>>>>>>>>\n",
      "{'a': {'b': {'c': {'value': 'FFFFFFFFFFFF', 'd': {'e': {'value': 444, 'f': {'g': b'AMAZING *this is saved to redis via xo********'}}}}}, 'value': b'7'}, 'b': 'save to redis!', 'x': {'y': {'z': b'ZZZZZZZZ2'}}}\n",
      "<<<<<<<<<<<<<<<\n",
      "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ {'type': 'pmessage', 'pattern': b'xo/redis*', 'channel': b'xo/redis/a', 'data': b'8'} () {}\n",
      "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n",
      "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ b'xo.redis.a'\n",
      "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ xo.redis.a\n",
      "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ b'8'\n",
      "FFFFFFFFFFFFFFF\n",
      "FFFFFFFFFFFFFFF\n",
      "FFFFFFFFFFFFFFF xo\n",
      "{'redis': {'a': {'b': {'c': {'value': 'FFFFFFFFFFFF', 'd': {'e': {'value': 444, 'f': {'g': b'AMAZING *this is saved to redis via xo********'}}}}}, 'value': b'7'}, 'b': 'save to redis!', 'x': {'y': {'z': b'ZZZZZZZZ2'}}}, 'zmq': {'nice': {'awesome': 'please breath'}}, 'use': <function <lambda> at 0x7f6e3f4a3e50>, 'value': 'yoo'} xo\n",
      "tttccccchild, final redis xo\n",
      "tttccccchild, final a xo/redis\n",
      "FFFFFFFFFFFFFFF\n",
      "FFFFFFFFFFFFFFF\n",
      "FFFFFFFFFFFFFFF\n",
      "######   {'b': {'c': {'value': 'FFFFFFFFFFFF', 'd': {'e': {'value': 444, 'f': {'g': b'AMAZING *this is saved to redis via xo********'}}}}}, 'value': b'7'}\n",
      "xo/redis/a  SETTING VALUE TO b'8'\n",
      "{'b': {'c': {'value': 'FFFFFFFFFFFF', 'd': {'e': {'value': 444, 'f': {'g': b'AMAZING *this is saved to redis via xo********'}}}}}, 'value': b'8'}\n",
      "######   b'8'\n",
      "######   {'b': {'c': {'value': 'FFFFFFFFFFFF', 'd': {'e': {'value': 444, 'f': {'g': b'AMAZING *this is saved to redis via xo********'}}}}}, 'value': b'8'}\n",
      "{'b': {'c': {'value': 'FFFFFFFFFFFF', 'd': {'e': {'value': 444, 'f': {'g': b'AMAZING *this is saved to redis via xo********'}}}}}, 'value': b'8'}\n",
      "A@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ {'b': {'c': {'value': 'FFFFFFFFFFFF', 'd': {'e': {'value': 444, 'f': {'g': b'AMAZING *this is saved to redis via xo********'}}}}}, 'value': b'8'}\n",
      "\n",
      ">>>>>>>>>>>>>>>\n",
      "{'a': {'b': {'c': {'value': 'FFFFFFFFFFFF', 'd': {'e': {'value': 444, 'f': {'g': b'AMAZING *this is saved to redis via xo********'}}}}}, 'value': b'8'}, 'b': 'save to redis!', 'x': {'y': {'z': b'ZZZZZZZZ2'}}}\n",
      "<<<<<<<<<<<<<<<\n",
      "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ {'type': 'pmessage', 'pattern': b'xo/redis*', 'channel': b'xo/redis/a', 'data': b'9'} () {}\n",
      "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n",
      "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ b'xo.redis.a'\n",
      "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ xo.redis.a\n",
      "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ b'9'\n",
      "FFFFFFFFFFFFFFF\n",
      "FFFFFFFFFFFFFFF\n",
      "FFFFFFFFFFFFFFF xo\n",
      "{'redis': {'a': {'b': {'c': {'value': 'FFFFFFFFFFFF', 'd': {'e': {'value': 444, 'f': {'g': b'AMAZING *this is saved to redis via xo********'}}}}}, 'value': b'8'}, 'b': 'save to redis!', 'x': {'y': {'z': b'ZZZZZZZZ2'}}}, 'zmq': {'nice': {'awesome': 'please breath'}}, 'use': <function <lambda> at 0x7f6e3f4a3e50>, 'value': 'yoo'} xo\n",
      "tttccccchild, final redis xo\n",
      "tttccccchild, final a xo/redis\n",
      "FFFFFFFFFFFFFFF\n",
      "FFFFFFFFFFFFFFF\n",
      "FFFFFFFFFFFFFFF\n",
      "######   {'b': {'c': {'value': 'FFFFFFFFFFFF', 'd': {'e': {'value': 444, 'f': {'g': b'AMAZING *this is saved to redis via xo********'}}}}}, 'value': b'8'}\n",
      "xo/redis/a  SETTING VALUE TO b'9'\n",
      "{'b': {'c': {'value': 'FFFFFFFFFFFF', 'd': {'e': {'value': 444, 'f': {'g': b'AMAZING *this is saved to redis via xo********'}}}}}, 'value': b'9'}\n",
      "######   b'9'\n",
      "######   {'b': {'c': {'value': 'FFFFFFFFFFFF', 'd': {'e': {'value': 444, 'f': {'g': b'AMAZING *this is saved to redis via xo********'}}}}}, 'value': b'9'}\n",
      "{'b': {'c': {'value': 'FFFFFFFFFFFF', 'd': {'e': {'value': 444, 'f': {'g': b'AMAZING *this is saved to redis via xo********'}}}}}, 'value': b'9'}\n",
      "A@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ {'b': {'c': {'value': 'FFFFFFFFFFFF', 'd': {'e': {'value': 444, 'f': {'g': b'AMAZING *this is saved to redis via xo********'}}}}}, 'value': b'9'}\n",
      "\n",
      ">>>>>>>>>>>>>>>\n",
      "{'a': {'b': {'c': {'value': 'FFFFFFFFFFFF', 'd': {'e': {'value': 444, 'f': {'g': b'AMAZING *this is saved to redis via xo********'}}}}}, 'value': b'9'}, 'b': 'save to redis!', 'x': {'y': {'z': b'ZZZZZZZZ2'}}}\n",
      "<<<<<<<<<<<<<<<\n"
     ]
    }
   ],
   "source": [
    "while True:\n",
    "# #     print(\".\",pubsub.get_message(), end=\"\")\n",
    "    time.sleep(1)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "TODO - subscribe to redis pubsub"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3.8.12 64-bit",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.12"
  },
  "orig_nbformat": 4,
  "vscode": {
   "interpreter": {
    "hash": "0adcc2737ebf6a4a119f135174df96668767fca1ef1112612db5ecadf2b6d608"
   }
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
